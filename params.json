{
  "name": "Tower Defense",
  "tagline": "fall2016-project-RAWeber created by GitHub Classroom",
  "body": "ï»¿# Tower Defense Game [![Build Status](https://travis-ci.org/cpe305/fall2016-project-RAWeber.svg?branch=master)](https://travis-ci.org/cpe305/fall2016-project-RAWeber)\r\n\r\nThis project consists of a Tower Defense game. The game was created using libgdx and is supported on desktop and android. The game involves players placing towers on a grid in order to defeat waves of oncoming enemies.\r\n\r\n![](https://github.com/cpe305/fall2016-project-RAWeber/blob/master/images/TowerStore.png?raw=true)\r\n\r\n## Main Features\r\n- Grid System\r\n  - Path logic\r\n  - Tower squares\r\n- Tower System\r\n  - 4 different towers\r\n  - 2 types of tower attacks\r\n  - Tower Store\r\n- Enemy System\r\n  - 3 different enemies\r\n  - Random enemy spawner\r\n\r\n## Main Design Patterns\r\n- Strategy Pattern  \r\n  - Using this pattern allowed me to interchange tower attacks, allowing easy creation of new towers. Additionally this allows for easy extension of the tower logic, as towers will be able to function with new attack types. This pattern was used in:\r\n    - TowerAttack\r\n- Singleton Pattern\r\n  - Using this pattern ensured that only one instance of key components was present at any time. This pattern also allowed easy access to the main components without the need to pass references among components. This pattern was used in:\r\n    - MapGrid\r\n    - Spawner\r\n    - TowerStore\r\n\r\n![](https://github.com/cpe305/fall2016-project-RAWeber/blob/master/images/Final Tower Defense Diagram.png?raw=true)\r\n\r\n## What I Liked About My Design  \r\nMy favorite aspect of this project's design is the Tower component. Using the strategy pattern to abstract the attack type from the tower not only helped me reaffirm one of the patterns learned in class, but also made this portion of my code easily extendable. While time limited me to how many attacks I could make, I could easily add a new one in the future, while keeping the rest of my code functioning properly.\r\n\r\n## Key Takeaway From Project  \r\nThrough constant struggles with setting up travisCI and sonarqube with my libGDX/android project, I came to have a strong understanding of how maven, gradle, and sonarqube work. By the end of this project I was directly editing multiple parts of my gradle files in order to trouble shoot problems. While not always successful, I was able to develop a deeper understanding of these tools.\r\n\r\n\r\n**Support or Contact**  \r\n@RAWeber  \r\nRAWeber95@gmail.com\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}